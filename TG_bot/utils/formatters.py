from typing import Dict, List
from ML_integration import generate_yandex_maps_url

def format_spot_description(spot: Dict, user_coords: List[float] = None) -> str:
    """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –æ–ø–∏—Å–∞–Ω–∏–µ –º–µ—Å—Ç–∞ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è"""
    text = f"üé£ <b>{spot['name']}</b>\n\n"
    
    # –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã
    coordinates = spot.get('coordinates', [])
    if coordinates and len(coordinates) >= 2:
        lat, lon = coordinates[0], coordinates[1]
        text += f"üìç <b>–ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã:</b> {lat:.6f}, {lon:.6f}\n"
    
    # –†–∞—Å—Å—Ç–æ—è–Ω–∏–µ
    if spot.get('distance_km') is not None:
        text += f"üöó <b>–†–∞—Å—Å—Ç–æ—è–Ω–∏–µ:</b> {spot['distance_km']:.1f} –∫–º\n"
    
    # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä—ã–±–µ –∏ –≤–æ–¥–æ–µ–º–µ
    short_desc = spot.get('short_description', {})
    if isinstance(short_desc, dict):
        if short_desc.get('fish_types'):
            fish_list = ', '.join(short_desc['fish_types'])
            text += f"üêü <b>–†—ã–±–∞:</b> {fish_list}\n"
        if short_desc.get('water_type'):
            text += f"üåä <b>–¢–∏–ø –≤–æ–¥–æ–µ–º–∞:</b> {short_desc['water_type']}\n"
    
    text += "\n"
    
    # –û–ø–∏—Å–∞–Ω–∏–µ –º–µ—Å—Ç–∞
    description = spot.get('description', '')
    if description:
        text += f"üìù <b>–û–ø–∏—Å–∞–Ω–∏–µ:</b>\n{description}\n\n"
    
    # –°—Å—ã–ª–∫–∞ –Ω–∞ –º–∞—Ä—à—Ä—É—Ç
    if user_coords and coordinates:
        maps_url = generate_yandex_maps_url(user_coords, coordinates, spot['name'])
        if maps_url:
            text += f"üó∫Ô∏è <a href='{maps_url}'>–ü–æ—Å—Ç—Ä–æ–∏—Ç—å –º–∞—Ä—à—Ä—É—Ç –≤ –Ø–Ω–¥–µ–∫—Å.–ö–∞—Ä—Ç–∞—Ö</a>\n"
    
    return text

def format_history_text(history, limit=5):
    """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –∏—Å—Ç–æ—Ä–∏—é –ø–æ–µ–∑–¥–æ–∫"""
    if not history:
        return (
            "üìö <b>–ò—Å—Ç–æ—Ä–∏—è –≤–∞—à–∏—Ö –ø–æ–µ–∑–¥–æ–∫</b>\n\n"
            "–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –º–µ—Å—Ç –¥–ª—è —Ä—ã–±–∞–ª–∫–∏.\n"
            "–ù–∞—á–Ω–∏—Ç–µ –ø–æ–∏—Å–∫, —á—Ç–æ–±—ã –≤—ã–±—Ä–∞—Ç—å –ø–µ—Ä–≤–æ–µ –º–µ—Å—Ç–æ!"
        )
    
    history_text = "üìö <b>–ü–æ—Å–ª–µ–¥–Ω–∏–µ –ø–æ–µ–∑–¥–∫–∏</b>\n\n"
    
    for i, spot in enumerate(history[:limit], 1):
        date_str = spot.selected_at.strftime("%d.%m")
        history_text += f"<b>{i}. {spot.spot_name}</b>\n"
        
        if spot.fishing_date:
            fishing_date_str = spot.fishing_date.strftime("%d.%m.%Y")
            history_text += f"üé£ {fishing_date_str}\n"
        else:
            history_text += f"üìÖ {date_str}\n"
        
        history_text += "\n"
    
    if len(history) > limit:
        history_text += f"–ò –µ—â–µ {len(history) - limit} –ø–æ–µ–∑–¥–æ–∫...\n\n"
    
    return history_text