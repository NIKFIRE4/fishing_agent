from aiogram import Router, F
from aiogram.types import CallbackQuery
from aiogram.fsm.context import FSMContext
from aiogram_calendar import SimpleCalendar
import logging

from keyboards.inline import get_main_menu_inline_keyboard
from keyboards.main_menu import get_start_keyboard
from database.requests import save_selected_spot

logger = logging.getLogger(__name__)
callbacks_router = Router()

@callbacks_router.callback_query(F.data.startswith("spot_select:"))
async def handle_spot_selection(callback: CallbackQuery, state: FSMContext):
    await callback.answer()

    data = await state.get_data()
    spots = data.get('spots', [])
    user_query = data.get('user_query', '')
    user_coordinates = data.get('user_coordinates')
    fishing_date = data.get('fishing_date')

    _, spot_id, index_str = callback.data.split(":")
    index = int(index_str)

    if index < len(spots):
        selected_spot = spots[index]
        try:
            await save_selected_spot(
                tg_id=callback.from_user.id,
                spot_data=selected_spot,
                user_query=user_query,
                user_coordinates=user_coordinates,
                fishing_date=fishing_date
            )
        except Exception as e:
            logger.error(f"Error saving selected spot: {e}")

        from keyboards.inline import get_history_keyboard
        date_str = fishing_date.strftime('%d.%m.%Y') if fishing_date else '–Ω–µ —É–∫–∞–∑–∞–Ω–∞'
        await callback.message.edit_text(
            f"‚úÖ <b>–ú–µ—Å—Ç–æ –≤—ã–±—Ä–∞–Ω–æ –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ!</b>\n\n"
            f"–í—ã –≤—ã–±—Ä–∞–ª–∏: <b>{selected_spot['name']}</b>\n"
            f"üìÖ –î–∞—Ç–∞: <b>{date_str}</b>\n\n"
            f"üé£ –£–¥–∞—á–Ω–æ–π —Ä—ã–±–∞–ª–∫–∏!",
            parse_mode='HTML',
            reply_markup=get_history_keyboard()
        )
    await state.clear()

@callbacks_router.callback_query(F.data == "new_search")
async def handle_new_search(callback: CallbackQuery, state: FSMContext):
    await callback.answer()
    await state.clear()
    
    await callback.message.edit_text(
        "üé£ –ù–∞—á–Ω–∏—Ç–µ –Ω–æ–≤—ã–π –ø–æ–∏—Å–∫!\n\n–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–Ω—É –∏–∑ –æ–ø—Ü–∏–π:",
        reply_markup=get_main_menu_inline_keyboard()
    )

@callbacks_router.callback_query(F.data == "start_search")
async def handle_start_search_callback(callback: CallbackQuery, state: FSMContext):
    await callback.answer()
    
    from states.search_states import SearchStates
    await state.set_state(SearchStates.selecting_date)
    
    await callback.message.answer(
        "üìÖ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –¥–∞—Ç—É –≤–∞—à–µ–π –ø–ª–∞–Ω–∏—Ä—É–µ–º–æ–π —Ä—ã–±–∞–ª–∫–∏. "
        "–≠—Ç–æ –ø–æ–∑–≤–æ–ª–∏—Ç –Ω–∞–º –ø–æ–¥–æ–±—Ä–∞—Ç—å –ª—É—á—à–∏–µ –º–µ—Å—Ç–∞, –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏–≤ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–æ–º, "
        "—Å–∫–æ–ª—å–∫–æ —á–µ–ª–æ–≤–µ–∫ –æ–∂–∏–¥–∞–µ—Ç—Å—è –Ω–∞ –º–µ—Å—Ç–µ –≤ —ç—Ç–æ—Ç –¥–µ–Ω—å."
    )
    
    calendar_markup = await SimpleCalendar().start_calendar()
    await callback.message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –¥–∞—Ç—É:", reply_markup=calendar_markup)

@callbacks_router.callback_query(F.data == "about_us")
async def handle_about_us_callback(callback: CallbackQuery, state: FSMContext):
    await callback.answer()
    await state.clear()
    
    await callback.message.edit_text(
        "‚ÑπÔ∏è <b>–û FishAgent</b>\n\n"
        "üé£ FishAgent ‚Äî —ç—Ç–æ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ –¥–ª—è –ø–æ–∏—Å–∫–∞ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã—Ö –º–µ—Å—Ç —Ä—ã–±–∞–ª–∫–∏.\n\n"
        "ü§ñ –ú—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º –º–∞—à–∏–Ω–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –≤–∞—à–∏—Ö –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–π –∏ –ø–æ–¥–±–æ—Ä–∞ –Ω–∞–∏–±–æ–ª–µ–µ –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö –≤–æ–¥–æ–µ–º–æ–≤.\n\n"
        "üåä –í –Ω–∞—à–µ–π –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —Ç—ã—Å—è—á–∏ –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã—Ö –º–µ—Å—Ç –¥–ª—è —Ä—ã–±–∞–ª–∫–∏ –≤ –°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥–µ.\n\n"
        "üì± –ü—Ä–æ—Å—Ç–æ –æ–ø–∏—à–∏—Ç–µ, —á—Ç–æ –≤—ã –∏—â–µ—Ç–µ, –∏ –º—ã –Ω–∞–π–¥–µ–º –ª—É—á—à–∏–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –¥–ª—è –≤–∞—Å!\n\n"
        "–†–∞–∑—Ä–∞–±–æ—Ç–∞–Ω–æ —Å ‚ù§Ô∏è –¥–ª—è —Ä—ã–±–∞–∫–æ–≤\n\n"
        "üì¢ –°–ª–µ–¥–∏—Ç–µ –∑–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è–º–∏ –≤ "
        '<a href="https://t.me/fish_agent">–Ω–∞—à–µ–º –∫–∞–Ω–∞–ª–µ</a>!\n\n'
        "–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–Ω—É –∏–∑ –æ–ø—Ü–∏–π:",
        parse_mode='HTML',
        reply_markup=get_main_menu_inline_keyboard()
    )

@callbacks_router.callback_query(F.data == "main_menu")
async def handle_main_menu_callback(callback: CallbackQuery, state: FSMContext):
    await callback.answer()
    await state.clear()
    
    await callback.message.edit_text(
        "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é\n\n–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–Ω—É –∏–∑ –æ–ø—Ü–∏–π:",
        reply_markup=get_main_menu_inline_keyboard()
    )