from aiogram import Router, F
from aiogram.types import Message, CallbackQuery
from aiogram.fsm.context import FSMContext
import logging

from database.requests import get_user_fishing_history
from keyboards.inline import get_history_keyboard
from utils.formatters import format_history_text

logger = logging.getLogger(__name__)
history_router = Router()

@history_router.message(F.text == "üìö –ò—Å—Ç–æ—Ä–∏—è –º–µ—Å—Ç")
async def show_history_from_menu(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ '–ò—Å—Ç–æ—Ä–∏—è –º–µ—Å—Ç' –∏–∑ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é"""
    try:
        history = await get_user_fishing_history(message.from_user.id, limit=10)
        
        if not history:
            await message.answer(
                "üìö <b>–ò—Å—Ç–æ—Ä–∏—è –≤–∞—à–∏—Ö –ø–æ–µ–∑–¥–æ–∫</b>\n\n"
                "–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –º–µ—Å—Ç –¥–ª—è —Ä—ã–±–∞–ª–∫–∏.\n"
                "–ù–∞—á–Ω–∏—Ç–µ –ø–æ–∏—Å–∫, —á—Ç–æ–±—ã –≤—ã–±—Ä–∞—Ç—å –ø–µ—Ä–≤–æ–µ –º–µ—Å—Ç–æ!",
                parse_mode='HTML'
            )
            return
        
        # –ü–æ–¥—Ä–æ–±–Ω–∞—è –∏—Å—Ç–æ—Ä–∏—è –¥–ª—è –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
        history_text = "üìö <b>–ò—Å—Ç–æ—Ä–∏—è –≤–∞—à–∏—Ö –ø–æ–µ–∑–¥–æ–∫</b>\n\n"
        
        for i, spot in enumerate(history, 1):
            date_str = spot.selected_at.strftime("%d.%m.%Y %H:%M")
            history_text += f"<b>{i}. {spot.spot_name}</b>\n"
            history_text += f"üìÖ {date_str}\n"
            
            if spot.fishing_date:
                fishing_date_str = spot.fishing_date.strftime("%d.%m.%Y")
                history_text += f"üé£ –î–∞—Ç–∞ —Ä—ã–±–∞–ª–∫–∏: <b>{fishing_date_str}</b>\n"
            
            if spot.user_query:
                short_query = spot.user_query[:50] + "..." if len(spot.user_query) > 50 else spot.user_query
                history_text += f"üîç –ó–∞–ø—Ä–æ—Å: <i>{short_query}</i>\n"
            
            if spot.spot_coordinates:
                coords = spot.spot_coordinates.split(',')
                if len(coords) == 2:
                    history_text += f"üó∫ <a href='https://yandex.ru/maps/?pt={coords[1]},{coords[0]}&z=15&l=map'>–ü–æ–∫–∞–∑–∞—Ç—å –Ω–∞ –∫–∞—Ä—Ç–µ</a>\n"
            
            history_text += "\n"
        
        await message.answer(history_text, parse_mode='HTML')
        
        await message.answer(
            f"–í—Å–µ–≥–æ –ø–æ–µ–∑–¥–æ–∫: <b>{len(history)}</b>\n"
            f"–ü–æ—Å–ª–µ–¥–Ω—è—è –ø–æ–µ–∑–¥–∫–∞: <b>{history[0].selected_at.strftime('%d.%m.%Y')}</b>",
            parse_mode='HTML'
        )
        
    except Exception as e:
        logger.error(f"Error showing history: {e}")
        await message.answer("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∏—Å—Ç–æ—Ä–∏–∏.")

@history_router.callback_query(F.data == "show_history")
async def handle_show_history_callback(callback: CallbackQuery, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ inline –∫–Ω–æ–ø–∫–∏ '–ò—Å—Ç–æ—Ä–∏—è'"""
    await callback.answer()
    
    try:
        history = await get_user_fishing_history(callback.from_user.id, limit=10)
        history_text = format_history_text(history, limit=5)
        
        if history and len(history) > 5:
            history_text += "–ü–æ–ª–Ω—É—é –∏—Å—Ç–æ—Ä–∏—é —Å–º–æ—Ç—Ä–∏—Ç–µ –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é –±–æ—Ç–∞."
        
        await callback.message.edit_text(
            history_text,
            parse_mode='HTML',
            reply_markup=get_history_keyboard()
        )
        
    except Exception as e:
        logger.error(f"Error showing history from callback: {e}")
        await callback.message.edit_text(
            "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∏—Å—Ç–æ—Ä–∏–∏.",
            reply_markup=get_history_keyboard()
        )