from aiogram import Router, F
from aiogram.filters import CommandStart, Command
from aiogram.types import Message
from aiogram.fsm.context import FSMContext

from keyboards.main_menu import get_start_keyboard
from database.requests import get_or_create_user
import logging

logger = logging.getLogger(__name__)
start_router = Router()

@start_router.message(Command("start"))
async def start_command(message: Message, state: FSMContext):
    await state.clear()
    await message.answer(
        f"–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}! üé£\n\n"
        "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ FishAgent ‚Äî –≤–∞—à –ø–æ–º–æ—â–Ω–∏–∫ –≤ –ø–æ–∏—Å–∫–µ –∏–¥–µ–∞–ª—å–Ω—ã—Ö –º–µ—Å—Ç –¥–ª—è —Ä—ã–±–∞–ª–∫–∏!\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–Ω—É –∏–∑ –æ–ø—Ü–∏–π:",
        reply_markup=get_start_keyboard()
    )

@start_router.message(F.text == "‚ÑπÔ∏è –û –Ω–∞—Å")
async def about_us(message: Message, state: FSMContext):
    await state.clear()
    await message.answer(
        "‚ÑπÔ∏è <b>–û FishAgent</b>\n\n"
        "üé£ FishAgent ‚Äî —ç—Ç–æ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ –¥–ª—è –ø–æ–∏—Å–∫–∞ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã—Ö –º–µ—Å—Ç —Ä—ã–±–∞–ª–∫–∏.\n\n"
        "ü§ñ –ú—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º –º–∞—à–∏–Ω–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –≤–∞—à–∏—Ö –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–π –∏ –ø–æ–¥–±–æ—Ä–∞ –Ω–∞–∏–±–æ–ª–µ–µ –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö –≤–æ–¥–æ–µ–º–æ–≤.\n\n"
        "üåä –í –Ω–∞—à–µ–π –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —Ç—ã—Å—è—á–∏ –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã—Ö –º–µ—Å—Ç –¥–ª—è —Ä—ã–±–∞–ª–∫–∏ –≤ –°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥–µ.\n\n"
        "üì± –ü—Ä–æ—Å—Ç–æ –æ–ø–∏—à–∏—Ç–µ, —á—Ç–æ –≤—ã –∏—â–µ—Ç–µ, –∏ –º—ã –Ω–∞–π–¥–µ–º –ª—É—á—à–∏–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –¥–ª—è –≤–∞—Å!\n\n"
        "–†–∞–∑—Ä–∞–±–æ—Ç–∞–Ω–æ —Å ‚ù§Ô∏è –¥–ª—è —Ä—ã–±–∞–∫–æ–≤\n\n"
        "üì¢ –°–ª–µ–¥–∏—Ç–µ –∑–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è–º–∏ –≤ "
        '<a href="https://t.me/fish_agent">–Ω–∞—à–µ–º –∫–∞–Ω–∞–ª–µ</a>!',
        parse_mode='HTML',
        reply_markup=get_start_keyboard()
    )

@start_router.message(F.text.in_(["üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", "/menu"]))
async def back_to_menu(message: Message, state: FSMContext):
    await state.clear()
    await message.answer(
        "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é\n\n–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–Ω—É –∏–∑ –æ–ø—Ü–∏–π:",
        reply_markup=get_start_keyboard()
    )

@start_router.message(F.text)
async def handle_other_text(message: Message, state: FSMContext):
    from states.search_states import SearchStates
    
    current_state = await state.get_state()
    
    if current_state != SearchStates.waiting_for_search_request:
        await message.answer(
            "ü§î –Ø –Ω–µ –ø–æ–Ω—è–ª –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.\n\n"
            "–î–ª—è –ø–æ–∏—Å–∫–∞ –º–µ—Å—Ç —Ä—ã–±–∞–ª–∫–∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É ¬´üé£ –ù–∞—á–∞—Ç—å –ø–æ–∏—Å–∫ –º–µ—Å—Ç¬ª, "
            "–∞ –¥–ª—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –±–æ—Ç–µ ‚Äî ¬´‚ÑπÔ∏è –û –Ω–∞—Å¬ª.",
            reply_markup=get_start_keyboard()
        )